package frc.robot.subsystems;

import edu.wpi.first.wpilibj2.command.SubsystemBase;
import frc.robot.Constants;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import com.ctre.phoenix.motorcontrol.can.TalonSRX;
import com.ctre.phoenix.motorcontrol.ControlMode;


import static frc.robot.Constants.*;

/**
 * Basic tank drive with WPI-wrapped motor controllers
 * see https://docs.ctre-phoenix.com/en/stable/ch15_WPIDrive.html
 */
public class Drive extends SubsystemBase {

  WPI_TalonSRX leftTalon1, leftTalon2, rightTalon1, rightTalon2; 
 
  SpeedControllerGroup leftGroup, rightGroup;

  DifferentialDrive drivetrain;

  /** Creates a new Drive. */
  public Drive() {
    leftTalon1  = new WPI_TalonSRX(Constants.Left_Motor_1);
    leftTalon2 = new WPI_TalonSRX(Constants.Left_Motor_2);
    
    rightTalon1  = new WPI_TalonSRX(Constants.Right_Motor_1);
    rightTalon2 = new WPI_TalonSRX(Constants.Right_Motor_2);
    
    SpeedControllerGroup leftGroup = new SpeedControllerGroup(leftTalon1,leftTalon2);
    SpeedControllerGroup rightGroup = new SpeedControllerGroup(rightTalon1,rightTalon2);

    drivetrain = new DifferentialDrive(leftGroup, rightGroup);
    drivetrain.setRightSideInverted(true);
  }

  public void tankDrive(double leftGroup, double rightGroup){
    drivetrain.tankDrive(leftGroup, rightGroup);
  }

  //public void curvatureDrive(double power, double turn) {
  //  drivetrain.curvatureDrive(power, turn, true);
  //}

  @Override
  public void periodic() {
    // This method will be called once per scheduler run
  }
}
